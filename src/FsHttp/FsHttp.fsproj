<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Configurations>Debug;Release</Configurations>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <LangVersion>8</LangVersion>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\FsHttp.xml</DocumentationFile>
    <Description>A .Net HTTP client library for F#, C#, and friends</Description>
    <PackageId>FsHttp</PackageId>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="AssemblyInfo.fs" />
    <Compile Include="Domain.fs" />
    <Compile Include="Defaults.fs" />
    <Compile Include="Fsi.fs" />
    <Compile Include="DomainExtensions.fs" />
    <Compile Include="Helper.fs" />
    <Compile Include="Autos.fs" />
    <Compile Include="MimeTypes.fs" />
    <Compile Include="GlobalConfig.fs" />
    <Compile Include="Response.fs" />
    <Compile Include="Request.fs" />
    <Compile Include="Print.fs" />
    <Compile Include="FsiInit.fs" />
    <Compile Include="Dsl.fs" />
    <Compile Include="Dsl.CE.fs" />
    <Compile Include="Operators.fs" />
    <Compile Include="Extensions.fs" />
  </ItemGroup>
  <ItemGroup>
    <None Include="..\..\README.md" Pack="true" PackagePath="\" />
    <None Include="..\..\docs\img\logo_small.png" Pack="true" PackagePath="\" />
  </ItemGroup>
  <ItemGroup>
    <!--
      - Intentionally depend on a minimal version of FSharp.Core as the package previously did prior to V13
        see https://github.com/fsprojects/FsHttp/issues/183
      - Releases 13-14.4.0 did not include a nuspec declaration of their dependency on FSharp.Core V8.0.100,
        so tools like Paket will gravitate toward those broken versions if we make the version constraint more restrictive
      - We require F# Core >= 5 due to string interpolation.
      - We have this in all library projects; NOT in the test projects.
        (https://fsharp.github.io/fsharp-compiler-docs/fsharp-core-notes.html#Package-authors-should-pin-their-FSharp-Core-reference)
      - ExcludeAssets is a workaround for malformed FSharp.Core packages https://github.com/dotnet/fsharp/issues/12706 via https://github.com/fsprojects/Paket/issues/4149
        Removal triggers issues in dotnet publish, e.g. for Lambda projects
        Also avoids Rider search finding stuff in FSharp.Core.xml
    -->
    <PackageReference Include="FSharp.Core" Version="8.0.400" ExcludeAssets="contentfiles" />
  </ItemGroup>
</Project>